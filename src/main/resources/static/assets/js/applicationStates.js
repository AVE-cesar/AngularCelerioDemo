//
// Source code generated by Celerio, a Jaxio product.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Follow us on twitter: @jaxiosoft
// Need commercial support ? Contact us: info@jaxio.com
// Template angular-lab:angularjs/assets/js/applicationStates.p.vm.js
//



app.config(function($stateProvider, $urlRouterProvider) {
	//
	// For any unmatched url, redirect to /dashboard
	$urlRouterProvider.otherwise("/dashboard");
	//
  
	// Now set up the states
	$stateProvider
    	.state('dashboard', {
      		url: "/dashboard",
      		templateUrl: "assets/tpl/dashboard.html"
	});
	
	$stateProvider
    	.state('settings', {
      		url: "/settings",
      		templateUrl: "assets/tpl/settings.html"
    });
    
    $stateProvider
    	.state('logout', {
      		url: "/logout",
      		templateUrl: "assets/tpl/logout.html"
    });	
    
    $stateProvider
    	.state('logLevels', {
      		url: "/logLevels",
      		templateUrl: "assets/tpl/logLevels.html",
      		controller: "LogsController"
    });
    
    $stateProvider
    	.state('translation', {
      		url: "/translation",
      		templateUrl: "assets/tpl/apps/admin/translation.html",
      		controller: "TranslationController"
    });		
    	
					
									
									
									
									
									
									
						
					$stateProvider
		.state('book', {
	    	url: "/book",
	    	templateUrl: "assets/tpl/apps/book/book.html",
			controller: "BookController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Book'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Book", "value": "{ \"id\": true, \"title\": true, \"description\": true, \"publicationDate\": true, \"authorId\": true, \"price\": true, \"barcodeid\": true}"});
						} else {
							return result;
						}
						});
                    }]
				} 
	});		  
					
									
									
									
						
					$stateProvider
		.state('appparameter', {
	    	url: "/appparameter",
	    	templateUrl: "assets/tpl/apps/appParameter/appParameter.html",
			controller: "AppParameterController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AppParameter'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AppParameter", "value": "{ \"id\": true, \"domain\": true, \"key\": true, \"value\": true}"});
						} else {
							return result;
						}
						});
                    }]
				} 
	});		  
					
									
									
									
						
					$stateProvider
		.state('apptranslation', {
	    	url: "/apptranslation",
	    	templateUrl: "assets/tpl/apps/appTranslation/appTranslation.html",
			controller: "AppTranslationController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AppTranslation'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AppTranslation", "value": "{ \"id\": true, \"language\": true, \"key\": true, \"value\": true}"});
						} else {
							return result;
						}
						});
                    }]
				} 
	});		  

					
									
									
									
									
									
									
						
					$stateProvider
		.state('editBook', {
			url: "/book/{id}",
	    	templateUrl: "assets/tpl/apps/book/bookEdit.html",
			controller: "BookEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'BookRestService', '$log', function($stateParams, BookRestService, log) {
					return BookRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editAppParameter', {
			url: "/appparameter/{id}",
	    	templateUrl: "assets/tpl/apps/appParameter/appParameterEdit.html",
			controller: "AppParameterEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, AppParameterRestService, log) {
					return AppParameterRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('editAppTranslation', {
			url: "/apptranslation/{id}",
	    	templateUrl: "assets/tpl/apps/appTranslation/appTranslationEdit.html",
			controller: "AppTranslationEditController",
			resolve: {
				mode : function() {
      				return "EDIT";
    			},
				item : ['$stateParams', 'AppTranslationRestService', '$log', function($stateParams, AppTranslationRestService, log) {
					return AppTranslationRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});

					
									
									
									
									
									
									
						
					$stateProvider
		.state('viewBook', {
			url: "/book/view/{id}",
	    	templateUrl: "assets/tpl/apps/book/bookEdit.html",
			controller: "BookEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'BookRestService', '$log', function($stateParams, BookRestService, log) {
					return BookRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewAppParameter', {
			url: "/appparameter/view/{id}",
	    	templateUrl: "assets/tpl/apps/appParameter/appParameterEdit.html",
			controller: "AppParameterEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, AppParameterRestService, log) {
					return AppParameterRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});
					
									
									
									
						
					$stateProvider
		.state('viewAppTranslation', {
			url: "/apptranslation/view/{id}",
	    	templateUrl: "assets/tpl/apps/appTranslation/appTranslationEdit.html",
			controller: "AppTranslationEditController",
			resolve: {
				mode : function() {
      				return "VIEW";
    			},
				item : ['$stateParams', 'AppTranslationRestService', '$log', function($stateParams, AppTranslationRestService, log) {
					return AppTranslationRestService.get({id : $stateParams.id}, function success(result) {}, function failure(result){
						log.info("something goes wrong !");
						}).$promise;
                    }]
				}
	});

	$stateProvider
		.state('createBook', {
			url: "/book",
	    	templateUrl: "assets/tpl/apps/book/bookEdit.html",
			controller: "BookCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createAppParameter', {
			url: "/appparameter",
	    	templateUrl: "assets/tpl/apps/appParameter/appParameterEdit.html",
			controller: "AppParameterCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});
	$stateProvider
		.state('createAppTranslation', {
			url: "/apptranslation",
	    	templateUrl: "assets/tpl/apps/appTranslation/appTranslationEdit.html",
			controller: "AppTranslationCreateController",
			resolve: {
				mode : function() {
      				return "CREATE";
    			}
    		}
	});

	$stateProvider
		.state('configBook', {
			url: "/bookConfig",
	    	templateUrl: "assets/tpl/apps/book/bookConfig.html",
			controller: "BookConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'Book'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "Book", "value": "{ \"id\": true, \"language\": true, \"key\": true, \"value\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configAppParameter', {
			url: "/appParameterConfig",
	    	templateUrl: "assets/tpl/apps/appParameter/appParameterConfig.html",
			controller: "AppParameterConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AppParameter'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AppParameter", "value": "{ \"id\": true, \"language\": true, \"key\": true, \"value\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
	$stateProvider
		.state('configAppTranslation', {
			url: "/appTranslationConfig",
	    	templateUrl: "assets/tpl/apps/appTranslation/appTranslationConfig.html",
			controller: "AppTranslationConfigController",
			resolve: {
				config : ['$stateParams', 'AppParameterRestService', '$log', function($stateParams, appParameterRestService, log) {
					return appParameterRestService.getParameter({domain: 'SCREEN_CONFIG', key: 'AppTranslation'}).$promise.then (function (result) {
					 	if (!result.value) {
                   			// no data has been found inside the dabatase, we need to create a fresh one
							return appParameterRestService.create({"domain": "SCREEN_CONFIG", "key": "AppTranslation", "value": "{ \"id\": true, \"language\": true, \"key\": true, \"value\": true}"});
						} else {
							return result;
						}
						});
                    }]
				}
	});
});